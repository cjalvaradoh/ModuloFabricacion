@model IEnumerable<caobaModeloFabricacion.Models.OrdenProduccion>

@{
    ViewData["Title"] = "Órdenes de Producción";
    Layout = "_LayoutLogged";
}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />

<div class="container-fluid px-5 pt-4">
    <h1 class="fw-bold fs-3 mb-4">Órdenes de Producción</h1>

    @if (TempData["Mensaje"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["Mensaje"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="input-group mb-4">
        <span class="input-group-text bg-white border-end-0">
            <i class="fas fa-search text-muted"></i>
        </span>
        <input type="text" id="searchOrdenes" class="form-control border-start-0" placeholder="Buscar por número de orden o producto" />
    </div>

    <div class="d-flex justify-content-end mb-3">
        <button class="btn btn-primary rounded-3" onclick="cargarFormularioCrear()" data-bs-toggle="modal" data-bs-target="#modalCrear">
            <i class="fas fa-plus me-2"></i> Crear Nuevo
        </button>
    </div>

    <table class="table align-middle table-hover border-0 shadow-sm">
        <thead class="table-light">
            <tr class="text-muted small text-uppercase">
                <th>Código Producto</th>
                <th>Producto</th>
                <th>Materiales</th>
                <th>Cantidad</th>
                <th>Estado</th>
                <th>Fecha inicio</th>
                <th>Fecha entrega</th>
                <th class="text-center">CRUD</th>
            </tr>
        </thead>
        <tbody id="tablaOrdenes">
            @foreach (var item in Model)
            {
                <tr class="orden-row"
                    data-codigo="@item.Producto?.Codigo"
                    data-producto="@item.Producto?.Nombre"
                    data-estado="@item.Estado">
                    <td>@item.Producto?.Codigo</td>
                    <td>@item.Producto?.Nombre</td>
                    <td style="white-space: nowrap; overflow: hidden; text-overflow: ellipsis; max-width: 200px;">
                        @if (item.Materiales != null && item.Materiales.Any())
                        {
                            var primerMaterial = item.Materiales.FirstOrDefault()?.Material?.Nombre;
                            var tieneMas = item.Materiales.Count > 1;
                            @($"{primerMaterial}{(tieneMas ? "..." : "")}")
                        }
                        else
                        {
                            <span class="text-muted">—</span>
                        }
                </td>
                <td>@item.Cantidad.ToString("0") uds.</td>
                <td>
                    <span class="d-flex align-items-center gap-2">
                        <i class="fas fa-circle" style="color:
                                @(item.Estado == "Pendiente" ? "#0d6efd" :
                                                                                   item.Estado == "En proceso" ? "#0dcaf0" :
                                                                                   item.Estado == "Finalizada" ? "#198754" :
                                                                                   item.Estado == "Cancelada" ? "#dc3545" : "#6c757d")"></i>
                        @item.Estado
                    </span>
                </td>
                <td>@item.FechaInicio.ToString("yyyy-MM-dd")</td>
                <td>@item.FechaEntrega.ToString("yyyy-MM-dd")</td>
                <td class="text-center">
                    <button onclick="cargarFormularioDetalles(@item.Ordenid)" class="btn btn-sm btn-light me-1" title="Ver">
                        <i class="fas fa-eye text-secondary"></i>
                    </button>
                    <button onclick="cargarFormularioEditar(@item.Ordenid)" class="btn btn-sm btn-light me-1" title="Editar">
                        <i class="fas fa-pen text-primary"></i>
                    </button>
                    <button onclick="cargarModalEliminar(@item.Ordenid)" class="btn btn-sm btn-light" title="Eliminar">
                        <i class="fas fa-trash text-danger"></i>
                    </button>
                </td>
            </tr>
                        }
        </tbody>
    </table>
</div>

<!-- MODALES -->
<!-- Modal Crear -->
<div class="modal fade" id="modalCrear" tabindex="-1" aria-labelledby="modalCrearLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title fw-bold" id="modalCrearLabel">Nueva Orden</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="modalCrearBody">
                <div class="text-center">Cargando formulario...</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Editar -->
<div class="modal fade" id="modalEditar" tabindex="-1" aria-labelledby="modalEditarLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header border-bottom-0">
                <h5 class="modal-title fw-bold" id="modalEditarLabel">Editar Orden</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="modalEditarBody">
                <div class="text-center">Cargando formulario...</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Detalles -->
<div class="modal fade" id="modalDetalles" tabindex="-1" aria-labelledby="modalDetallesLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-body" id="modalDetallesBody">
                <div class="text-center">Cargando detalles...</div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Eliminar -->
<div class="modal fade" id="modalEliminar" tabindex="-1" aria-labelledby="modalEliminarLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content text-center p-4">
            <div class="modal-body">
                <i class="fas fa-exclamation-triangle text-danger fs-3 mb-3"></i>
                <h5 class="fw-bold">¿Estás Seguro?</h5>
                <p class="text-muted">Se eliminará la orden completa junto con todos sus datos.<br />Esta acción es irreversible y no se podrán recuperar.</p>

                <form id="formEliminar" method="post">
                    <input type="hidden" name="id" id="ordenIdEliminar" />
                    <button type="button" class="btn btn-light me-2" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger px-4" onclick="event.preventDefault(); document.getElementById('formEliminar').submit();">Eliminar</button>

                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function cargarFormularioCrear() {
            fetch('/OrdenProduccion/Create')
                .then(res => res.text())
                .then(html => {
                    document.getElementById('modalCrearBody').innerHTML = html;
                })
                .catch(err => {
                    document.getElementById('modalCrearBody').innerHTML = '<div class="text-danger">Error al cargar el formulario</div>';
                });
        }

        function cargarFormularioEditar(id) {
            fetch('/OrdenProduccion/Edit/' + id)
                .then(res => res.text())
                .then(html => {
                    document.getElementById('modalEditarBody').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('modalEditar'));
                    modal.show();
                })
                .catch(err => {
                    document.getElementById('modalEditarBody').innerHTML = '<div class="text-danger">Error al cargar el formulario de edición</div>';
                });
        }

        function cargarFormularioDetalles(id) {
            fetch('/OrdenProduccion/Details/' + id)
                .then(res => res.text())
                .then(html => {
                    document.getElementById('modalDetallesBody').innerHTML = html;
                    const modal = new bootstrap.Modal(document.getElementById('modalDetalles'));
                    modal.show();
                })
                .catch(err => {
                    document.getElementById('modalDetallesBody').innerHTML = '<div class="text-danger">Error al cargar el detalle</div>';
                });
        }

        function cargarModalEliminar(id) {
            document.getElementById("ordenIdEliminar").value = id;
            document.getElementById("formEliminar").action = "/OrdenProduccion/Delete/" + id;
            const modal = new bootstrap.Modal(document.getElementById("modalEliminar"));
            modal.show();
        }

        // Filtro de búsqueda
        const input = document.getElementById('searchOrdenes');
        const filas = document.querySelectorAll('.orden-row');
        input.addEventListener('input', function () {
            const valor = this.value.toLowerCase();
            filas.forEach(fila => {
                const codigo = fila.getAttribute('data-codigo')?.toLowerCase() || '';
                const producto = fila.getAttribute('data-producto')?.toLowerCase() || '';
                const estado = fila.getAttribute('data-estado')?.toLowerCase() || '';
                fila.style.display = (codigo.includes(valor) || producto.includes(valor) || estado.includes(valor)) ? '' : 'none';
            });
        });

        // Interceptar submit de edición para que funcione sin recargar
        document.addEventListener("submit", function (e) {
            if (e.target && e.target.id === "editForm") {
                e.preventDefault();
                const form = e.target;
                const formData = new FormData(form);

                fetch(form.action, {
                    method: "POST",
                    body: formData
                })
                .then(res => res.text())
                .then(html => {
                    if (html.includes("form-control")) {
                        document.getElementById('modalEditarBody').innerHTML = html;
                    } else {
                        const modal = bootstrap.Modal.getInstance(document.getElementById('modalEditar'));
                        modal.hide();
                        location.reload();
                    }
                })
                .catch(err => {
                    console.error("Error al guardar la edición:", err);
                });
            }
        });
    </script>
}

